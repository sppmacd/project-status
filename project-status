#!/usr/bin/env python3
import argparse
import os
import sys
import time

from ps.detector import DetectorRegistry
from ps.files import Directory, FileDescriptorManager
import ps.logging
import config

def parse_args():
    parser = argparse.ArgumentParser(prog='project-status', description="Manage your projects.")
    parser.add_argument("--disable-formatting", help="disable output formatting", action="store_true")
    parser.add_argument("--no-open", help="don't open files (for performance)", action="store_true")
    parser.add_argument("--verbose", "-v", help="print what is done", action="store_true")
    
    subparsers = parser.add_subparsers(help="command", dest="command", required=True)
    
    # display-tree
    sp_display_tree = subparsers.add_parser("display-tree", help="display filesystem tree with guesses")
    sp_display_tree.add_argument("path", nargs="?", help="path to display", default=".")
    sp_display_tree.add_argument("--exclude", "-x", help="exclude specific file types")
    
    # version
    sp_version = subparsers.add_parser("version", help="display version")

    return parser.parse_args()

def main(args):
    if args.command == "version":
        print("Project Status v1.0\nCopyright (c) Sppmacd 2021")
        sys.exit(0)
    
    config.args = args
    config.args.exclude = config.args.exclude.split(",")
    
    FileDescriptorManager()
    
    file_list = Directory(None, args.path)
    
    if args.command == "display-tree":
        print(file_list)

try:
    if __name__ == "__main__":
        main(parse_args())
    else:
        ps.logging.print_error("Importing as module not supported!")
except KeyboardInterrupt:
    ps.logging.print_error("Interrupted :(")
except SystemExit:
    pass
except:
    print("Exception :( " + str(sys.exc_info()))
